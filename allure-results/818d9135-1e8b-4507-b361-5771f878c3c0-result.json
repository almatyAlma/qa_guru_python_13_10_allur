{"name": "test_github", "status": "failed", "statusDetails": {"message": "selene.core.exceptions.TimeoutException: Message: \n\nTimed out after 4s, while waiting for:\nbrowser.element(('css selector', '.header-search-input')).click\n\nReason: NoSuchElementException: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\".header-search-input\"}\n  (Session info: chrome=126.0.6478.62); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nScreenshot: file://C:\\Users\\technodom\\.selene\\screenshots\\1718712744804\\1718712744805.png\nPageSource: file://C:\\Users\\technodom\\.selene\\screenshots\\1718712744804\\1718712744805.html", "trace": "fn = <selene.core.wait.Command object at 0x0000021E9AAC1490>\n\n    def logic(fn: Callable[[E], R]) -> R:\n        finish_time = time.time() + self._timeout\n    \n        while True:\n            try:\n>               return fn(self.entity)\n\n..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selene\\core\\wait.py:119: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selene\\core\\wait.py:61: in __call__\n    return self._fn(entity)\n..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selene\\core\\entity.py:525: in raw_click\n    element.locate().click()\n..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selene\\core\\entity.py:185: in locate\n    return self._locator()\n..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selene\\core\\locator.py:34: in __call__\n    return self._locate()\n..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selene\\core\\_browser.py:71: in <lambda>\n    Locator(f'{self}.element({by})', lambda: self.driver.find_element(*by)),\n..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:741: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:347: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000021E9AC95250>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...07FF65CD1122F]\\\\n\\\\tBaseThreadInitThunk [0x00007FF9E45A257D+29]\\\\n\\\\tRtlUserThreadStart [0x00007FF9E552AF28+40]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\".header-search-input\"}\nE         (Session info: chrome=126.0.6478.62); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF65CDA3E52+31618]\nE       \t(No symbol) [0x00007FF65CD1B0B9]\nE       \t(No symbol) [0x00007FF65CBD888A]\nE       \t(No symbol) [0x00007FF65CC28524]\nE       \t(No symbol) [0x00007FF65CC2862C]\nE       \t(No symbol) [0x00007FF65CC6F787]\nE       \t(No symbol) [0x00007FF65CC4D14F]\nE       \t(No symbol) [0x00007FF65CC6CA80]\nE       \t(No symbol) [0x00007FF65CC4CEB3]\nE       \t(No symbol) [0x00007FF65CC1A46B]\nE       \t(No symbol) [0x00007FF65CC1B001]\nE       \tGetHandleVerifier [0x00007FF65D0AA02D+3202397]\nE       \tGetHandleVerifier [0x00007FF65D0F6A4D+3516285]\nE       \tGetHandleVerifier [0x00007FF65D0EC4C0+3473904]\nE       \tGetHandleVerifier [0x00007FF65CE55D56+760454]\nE       \t(No symbol) [0x00007FF65CD26B5F]\nE       \t(No symbol) [0x00007FF65CD21CF4]\nE       \t(No symbol) [0x00007FF65CD21E82]\nE       \t(No symbol) [0x00007FF65CD1122F]\nE       \tBaseThreadInitThunk [0x00007FF9E45A257D+29]\nE       \tRtlUserThreadStart [0x00007FF9E552AF28+40]\n\n..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchElementException\n\nDuring handling of the above exception, another exception occurred:\n\n    def test_github():\n        browser.open(\"https://github.com\")\n    \n>       s(\".header-search-input\").click()\n\ntest_selene.py:10: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selene\\core\\entity.py:540: in click\n    self.wait.for_(\n..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selene\\core\\wait.py:150: in for_\n    return self._decorator(self)(logic)(fn)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nfn = <selene.core.wait.Command object at 0x0000021E9AAC1490>\n\n    def logic(fn: Callable[[E], R]) -> R:\n        finish_time = time.time() + self._timeout\n    \n        while True:\n            try:\n                return fn(self.entity)\n            except Exception as reason:\n                if time.time() > finish_time:\n                    reason_string = '{name}: {message}'.format(\n                        name=reason.__class__.__name__,\n                        message=getattr(reason, \"msg\", str(reason)),\n                    )\n                    # TODO: think on how can we improve logging failures in selene, e.g. reverse msg and stacktrace\n                    # stacktrace = getattr(reason, 'stacktrace', None)\n                    # TODO: should we have an option to turn on stacktrace logging?\n                    timeout = self._timeout\n                    entity = self.entity\n    \n                    # if it's a normal function, it should have __qualname__,\n                    # then use it, otherwise use str(fn)\n                    fn_name = getattr(\n                        fn,\n                        '__qualname__',\n                        getattr(fn, '__str__', lambda: str(fn))(),\n                    )\n    \n                    failure = TimeoutException(\n                        f'\\n'\n                        f'\\nTimed out after {timeout}s, while waiting for:'\n                        f'\\n{entity}.{fn_name}'\n                        f'\\n'\n                        f'\\nReason: {reason_string}'\n                    )\n    \n>                   raise self._hook_failure(failure)\nE                   selene.core.exceptions.TimeoutException: Message: \nE                   \nE                   Timed out after 4s, while waiting for:\nE                   browser.element(('css selector', '.header-search-input')).click\nE                   \nE                   Reason: NoSuchElementException: no such element: Unable to locate element: {\"method\":\"css selector\",\"selector\":\".header-search-input\"}\nE                     (Session info: chrome=126.0.6478.62); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE                   Screenshot: file://C:\\Users\\technodom\\.selene\\screenshots\\1718712744804\\1718712744805.png\nE                   PageSource: file://C:\\Users\\technodom\\.selene\\screenshots\\1718712744804\\1718712744805.html\n\n..\\..\\AppData\\Local\\Programs\\Python\\Python312\\Lib\\site-packages\\selene\\core\\wait.py:148: TimeoutException"}, "start": 1718712744833, "stop": 1718712769130, "uuid": "e087155f-6e6a-47f4-8e9d-f7ebc4944ed3", "historyId": "89035ed2e74645e3e94ab470be5e353e", "testCaseId": "89035ed2e74645e3e94ab470be5e353e", "fullName": "test_selene#test_github", "labels": [{"name": "suite", "value": "test_selene"}, {"name": "host", "value": "LAPTOP-ARP2I869"}, {"name": "thread", "value": "16044-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_selene"}]}